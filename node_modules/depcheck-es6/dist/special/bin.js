'use strict';

var _Object$keys = require('babel-runtime/core-js/object/keys')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _jsYaml = require('js-yaml');

var _jsYaml2 = _interopRequireDefault(_jsYaml);

function getObjectValues(obj) {
  return _Object$keys(obj).map(function (key) {
    return obj[key];
  });
}

function join() {
  return _path2['default'].join.apply(_path2['default'], arguments).replace(/\\/g, '/');
}

function getBin(dir, dependency) {
  var packagePath = _path2['default'].resolve(dir, 'node_modules', dependency, 'package.json');
  var metadata = require(packagePath);
  return metadata.bin || {};
}

function isUsing(dep, bin, value, scripts) {
  return scripts.some(function (script) {
    return script.indexOf(bin) === 0 || script.indexOf('./node_modules/.bin/' + bin) !== -1 || script.indexOf(join('node_modules', dep, value)) !== -1;
  });
}

function depsUsedByScripts(deps, scripts, dir) {
  return deps.filter(function (dep) {
    var bin = getBin(dir, dep);
    return _Object$keys(bin).some(function (key) {
      return isUsing(dep, key, bin[key], scripts);
    });
  });
}

exports['default'] = function (content, filename, deps, dir) {
  var basename = _path2['default'].basename(filename);
  if (basename === 'package.json') {
    var scripts = getObjectValues(JSON.parse(content).scripts || {});
    return depsUsedByScripts(deps, scripts, dir);
  } else if (basename === '.travis.yml') {
    var metadata = _jsYaml2['default'].safeLoad(content) || {};
    var scripts = metadata.script || [];
    return depsUsedByScripts(deps, scripts, dir);
  }

  return [];
};

module.exports = exports['default'];