'use strict';

var _Promise = require('babel-runtime/core-js/promise')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports['default'] = postWebReport;

var _request = require('request');

var _request2 = _interopRequireDefault(_request);

function getSettings(env) {
  // TODO web report only supports Travis CI and GitHub now
  if (env.TRAVIS === 'true') {
    return {
      url: '/github/' + env.TRAVIS_REPO_SLUG,
      branch: env.TRAVIS_BRANCH,
      pullRequest: env.TRAVIS_PULL_REQUEST === 'false' ? false : parseInt(env.TRAVIS_PULL_REQUEST, 10)
    };
  }

  return {};
}

function postWebReport(result, log, error, env, _ref) {
  var webReport = _ref.webReport;
  var webService = _ref.webService;

  if (webReport === undefined) {
    return _Promise.resolve(result);
  }

  var _getSettings = getSettings(env);

  var url = _getSettings.url;
  var branch = _getSettings.branch;
  var pullRequest = _getSettings.pullRequest;

  if (!url) {
    error('Build environment is not supported yet, please report issue to https://github.com/lijunle/depcheck-es6');
    return _Promise.resolve(result);
  }

  if (pullRequest) {
    log('Skip posting depcheck report to web service because it run in a pull request.');
    return _Promise.resolve(result);
  }

  return new _Promise(function (resolve) {
    return (0, _request2['default'])({
      baseUrl: webService,
      url: url,
      method: 'POST',
      json: true,
      body: {
        token: env.DEPCHECK_TOKEN,
        branch: branch,
        report: webReport,
        result: result
      }
    }, function (err, res, body) {
      if (err) {
        error(err.toString());
      } else if (res.statusCode !== 200) {
        error(body);
      } else {
        log('Post web report succeed.');
      }

      resolve(result);
    });
  });
}

module.exports = exports['default'];